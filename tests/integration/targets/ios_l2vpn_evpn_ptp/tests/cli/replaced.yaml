---
- ansible.builtin.debug:
    msg: START ios_l2vpn_evpn_ptp replaced state for integration tests on connection={{ ansible_connection }}

- ansible.builtin.include_tasks: _remove_config.yaml
- ansible.builtin.include_tasks: _populate_config.yaml

- block:
    - name: Replace provided ios_l2vpn_evpn_ptp configuration
      register: result
      cisco.ios.ios_l2vpn_evpn_ptp: &id001
        config:
          - instance: "124"
            rd: "333:333"
            auto_route_target: false
            route_target_import:
              - "43:45"
            route_target_export:
              - "43:45"
            vpws_context:
              - context: "TEST3"
                member: "Vlan12"
                remote_link_failure_notification: false
                shutdown: false
              - context: "TEST4"
                service:
                  target: "55"
                  source: "55"
                member: "Vlan14"
                remote_link_failure_notification: true
        state: replaced

    - set_fact:
        sorted_result: |-
          [
          {% for each in result["before"] %}
          {
            {% for key, value in each.items() %}
            "{{ key }}":
            {% if value is string %}
            "{{ value }}"
            {% elif value is iterable and value is not mapping and key != "vpws_context" %}
            {{ value | sort }}
            {% else %}
            {{ value }}
            {% endif %}
            ,
            {% endfor %}
          },
          {% endfor %}
          ]

    - name: Assert that before dict is correctly generated
      ansible.builtin.assert:
        that:
          - gathered['config'] == sorted_result

    - name: Assert that correct set of commands were generated
      ansible.builtin.assert:
        that:
          - replaced['commands'] == result['commands']

    - name: Assert that after dict is correctly generated
      ansible.builtin.assert:
        that:
          - replaced['after'] == result['after']

    - name: Replace provided ios_l2vpn_evpn_ptp configuration (idempotent)
      register: result
      cisco.ios.ios_l2vpn_evpn_ptp: *id001

    - name: Assert that task was idempotent
      ansible.builtin.assert:
        that:
          - result['changed'] == false

  always:
    - ansible.builtin.include_tasks: _remove_config.yaml
