---
- ansible.builtin.debug:
    msg: START ios_vlan_configuration merged state for integration tests on connection={{ ansible_connection }}

- ansible.builtin.include_tasks: _remove_config.yaml
- ansible.builtin.include_tasks: _populate_config.yaml

- block:
#    - ansible.builtin.debug:
#        var: item
#      loop:
#        - "{{ gathered['config'] }}"
#
#    - meta: end_play

    - set_fact:
        dict_res: |-
          {
          {% for each_vlan in item %}
          "{{ each_vlan.vlan }}": {
            {% for k, val in each_vlan.items() %}
              "{{ k }}":
              {% if k == "member" %}
              {
                {% for m, each_member in val.items() %}
                  "{{ m }}":
                  {% if m == "pseudowire" %}
                  {
                    {% for member_item in each_member %}
                    "{{ member_item.pwnumber }}": {{ member_item }},
                    {% endfor %}
                  }
                  {% elif m == "ip_peer" %}
                  {
                    {% for member_item in each_member %}
                    "{{ member_item.address ~ '_' ~ member_item.vc_id }}": {{ member_item }},
                    {% endfor %}
                  }
                  {% else %}
                    {% if each_member is string %}
                      "{{ each_member }}"
                    {% else %}
                       {{ each_member }}
                    {% endif %}
                  {% endif %}
                  ,
                {% endfor %}
              }
              {% else %}
                {% if val is string %}
                  "{{ val }}"
                {% else %}
                  {{ val }}
                {% endif %}
              {% endif %}
              ,
            {% endfor %}
          },
          {% endfor %}
          }
      loop:
        - "{{ gathered['config'] }}"
        - "{{ result['after'] }}"
      register: r_dict

#    - ansible.builtin.debug:
#        var: r_dict

    - name: Assert that after dict is correctly generated
      ansible.builtin.assert:
        that:
          - r_dict['results'][0]['ansible_facts']['dict_res'] == r_dict['results'][1]['ansible_facts']['dict_res'] 

    - meta: end_play

    - name: Merge provided ios_vlan_configuration configuration with device configuration
      register: result
      cisco.ios.ios_vlan_configuration: &id001
        config:
        state: merged

    - name: Assert that correct set of ios_vlan_configuration commands were generated
      ansible.builtin.assert:
        that:
          - result['changed'] == true
          - "{{ merged['commands'] | symmetric_difference(result['commands']) | length == 0 }}"

    - name: Assert that after dict is correctly generated
      ansible.builtin.assert:
        that:
          - merged['after'] == sorted_result

    - name: Merge provided ios_vlan_configuration configuration with device configuration (idempotent)
      register: result
      cisco.ios.ios_vlan_configuration: *id001

    - name: Assert that the previous task has no changes made
      ansible.builtin.assert:
        that:
          - result['changed'] == false

  always:
    - ansible.builtin.include_tasks: _remove_config.yaml
